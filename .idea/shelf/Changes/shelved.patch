Index: elide/elide/tests/test_character_switcher.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from kivy.tests.common import UnitTestTouch\n\nfrom lisien.examples import polygons\n\nfrom .util import ELiDEAppTest, idle_until\n\n\nclass CharacterSwitcherTest(ELiDEAppTest):\n\tgame_name = \"polygons\"\n\tinstall = staticmethod(polygons.install)\n\n\tdef test_character_switcher(self):\n\t\tapp = self.app\n\t\tself.Window.add_widget(app.build())\n\t\tidle_until(\n\t\t\tlambda: app.manager.current == \"mainscreen\",\n\t\t\t100,\n\t\t\t\"Never switched to mainscreen\",\n\t\t)\n\t\tapp.mainscreen.populate()\n\t\tidle_until(\n\t\t\tlambda: app.mainscreen.boardview, 100, \"never got boardview\"\n\t\t)\n\t\tidle_until(\n\t\t\tlambda: app.mainscreen.boardview.board.spot, 100, \"never got spots\"\n\t\t)\n\t\tphysspots = len(app.mainscreen.boardview.board.spot)\n\t\tapp.mainscreen.charmenu.charmenu.toggle_chars_screen()\n\t\tidle_until(\n\t\t\tlambda: app.manager.current == \"chars\",\n\t\t\t100,\n\t\t\t\"Never switched to chars\",\n\t\t)\n\t\tboxl = app.chars.ids.charsview.ids.boxl\n\t\tidle_until(\n\t\t\tlambda: len(boxl.children) == 3,\n\t\t\t100,\n\t\t\t\"Didn't get all three characters\",\n\t\t)\n\t\tfor charb in boxl.children:\n\t\t\tif charb.text == \"triangle\":\n\t\t\t\ttouch = UnitTestTouch(*charb.center)\n\t\t\t\ttouch.pos = charb.center\n\t\t\t\tassert charb.dispatch(\"on_touch_down\", touch)\n\t\t\t\tself.advance_frames(5)\n\t\t\t\tcharb.dispatch(\"on_touch_up\", touch)\n\t\t\t\tidle_until(\n\t\t\t\t\tlambda: charb.state == \"down\",\n\t\t\t\t\t10,\n\t\t\t\t\t\"Button press did not work\",\n\t\t\t\t)\n\t\t\t\tbreak\n\t\telse:\n\t\t\tassert False, 'No button for \"triangle\" character'\n\t\tidle_until(\n\t\t\tlambda: app.chars.ids.charsview.character_name == \"triangle\",\n\t\t\t100,\n\t\t\t\"Never propagated character_name\",\n\t\t)\n\t\tapp.chars.toggle()\n\t\tidle_until(\n\t\t\tlambda: app.manager.current == \"mainscreen\",\n\t\t\t100,\n\t\t\t\"Didn't switch back to mainscreen\",\n\t\t)\n\t\tidle_until(\n\t\t\tlambda: not app.mainscreen.boardview.board.spot,\n\t\t\t100,\n\t\t\t\"Didn't clear out spots, {} left\".format(\n\t\t\t\tlen(app.mainscreen.boardview.board.spot)\n\t\t\t),\n\t\t)\n\t\tapp.mainscreen.charmenu.charmenu.toggle_chars_screen()\n\t\tidle_until(\n\t\t\tlambda: app.manager.current == \"chars\",\n\t\t\t100,\n\t\t\t\"Never switched to chars\",\n\t\t)\n\t\tfor charb in boxl.children:\n\t\t\tif charb.text == \"physical\":\n\t\t\t\ttouch = UnitTestTouch(*charb.center)\n\t\t\t\ttouch.pos = charb.center\n\t\t\t\tassert charb.dispatch(\"on_touch_down\", touch)\n\t\t\t\tself.advance_frames(5)\n\t\t\t\tcharb.dispatch(\"on_touch_up\", touch)\n\t\t\t\tidle_until(\n\t\t\t\t\tlambda: charb.state == \"down\",\n\t\t\t\t\t10,\n\t\t\t\t\t\"Button press did not work\",\n\t\t\t\t)\n\t\t\t\tbreak\n\t\telse:\n\t\t\tassert False, 'No button for \"physical\" character'\n\t\tidle_until(\n\t\t\tlambda: app.chars.ids.charsview.character_name == \"physical\",\n\t\t\t100,\n\t\t\t\"Never propagated character_name\",\n\t\t)\n\t\tapp.chars.toggle()\n\t\tidle_until(\n\t\t\tlambda: len(app.mainscreen.boardview.board.spot) == physspots,\n\t\t\t100,\n\t\t\t\"Never got physical back\",\n\t\t)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/elide/elide/tests/test_character_switcher.py b/elide/elide/tests/test_character_switcher.py
--- a/elide/elide/tests/test_character_switcher.py	(revision 452aa9dffb8c966141ea1e64cf049921b4b81420)
+++ b/elide/elide/tests/test_character_switcher.py	(date 1756341512896)
@@ -1,104 +1,108 @@
+import pytest
+
 from kivy.tests.common import UnitTestTouch
 
 from lisien.examples import polygons
+from lisien.engine import Engine
 
-from .util import ELiDEAppTest, idle_until
+from .util import advance_frames, idle_until
 
 
-class CharacterSwitcherTest(ELiDEAppTest):
-	game_name = "polygons"
-	install = staticmethod(polygons.install)
+@pytest.fixture(autouse=True)
+def polygons_sim(play_dir):
+	with Engine(play_dir, random_seed=0, workers=0) as eng:
+		polygons.install(eng)
 
-	def test_character_switcher(self):
-		app = self.app
-		self.Window.add_widget(app.build())
-		idle_until(
-			lambda: app.manager.current == "mainscreen",
-			100,
-			"Never switched to mainscreen",
-		)
-		app.mainscreen.populate()
-		idle_until(
-			lambda: app.mainscreen.boardview, 100, "never got boardview"
-		)
-		idle_until(
-			lambda: app.mainscreen.boardview.board.spot, 100, "never got spots"
-		)
-		physspots = len(app.mainscreen.boardview.board.spot)
-		app.mainscreen.charmenu.charmenu.toggle_chars_screen()
-		idle_until(
-			lambda: app.manager.current == "chars",
-			100,
-			"Never switched to chars",
-		)
-		boxl = app.chars.ids.charsview.ids.boxl
-		idle_until(
-			lambda: len(boxl.children) == 3,
-			100,
-			"Didn't get all three characters",
-		)
-		for charb in boxl.children:
-			if charb.text == "triangle":
-				touch = UnitTestTouch(*charb.center)
-				touch.pos = charb.center
-				assert charb.dispatch("on_touch_down", touch)
-				self.advance_frames(5)
-				charb.dispatch("on_touch_up", touch)
-				idle_until(
-					lambda: charb.state == "down",
-					10,
-					"Button press did not work",
-				)
-				break
-		else:
-			assert False, 'No button for "triangle" character'
-		idle_until(
-			lambda: app.chars.ids.charsview.character_name == "triangle",
-			100,
-			"Never propagated character_name",
-		)
-		app.chars.toggle()
-		idle_until(
-			lambda: app.manager.current == "mainscreen",
-			100,
-			"Didn't switch back to mainscreen",
-		)
-		idle_until(
-			lambda: not app.mainscreen.boardview.board.spot,
-			100,
-			"Didn't clear out spots, {} left".format(
-				len(app.mainscreen.boardview.board.spot)
-			),
-		)
-		app.mainscreen.charmenu.charmenu.toggle_chars_screen()
-		idle_until(
-			lambda: app.manager.current == "chars",
-			100,
-			"Never switched to chars",
-		)
-		for charb in boxl.children:
-			if charb.text == "physical":
-				touch = UnitTestTouch(*charb.center)
-				touch.pos = charb.center
-				assert charb.dispatch("on_touch_down", touch)
-				self.advance_frames(5)
-				charb.dispatch("on_touch_up", touch)
-				idle_until(
-					lambda: charb.state == "down",
-					10,
-					"Button press did not work",
-				)
-				break
-		else:
-			assert False, 'No button for "physical" character'
-		idle_until(
-			lambda: app.chars.ids.charsview.character_name == "physical",
-			100,
-			"Never propagated character_name",
-		)
-		app.chars.toggle()
-		idle_until(
-			lambda: len(app.mainscreen.boardview.board.spot) == physspots,
-			100,
-			"Never got physical back",
-		)
+def test_character_switcher(elide_app):
+	app = elide_app
+	idle_until(
+		lambda: app.manager.current == "mainscreen",
+		100,
+		"Never switched to mainscreen",
+	)
+	app.mainscreen.populate()
+	idle_until(
+		lambda: app.mainscreen.boardview, 100, "never got boardview"
+	)
+	idle_until(
+		lambda: app.mainscreen.boardview.board.spot, 100, "never got spots"
+	)
+	physspots = len(app.mainscreen.boardview.board.spot)
+	app.mainscreen.charmenu.charmenu.toggle_chars_screen()
+	idle_until(
+		lambda: app.manager.current == "chars",
+		100,
+		"Never switched to chars",
+	)
+	boxl = app.chars.ids.charsview.ids.boxl
+	idle_until(
+		lambda: len(boxl.children) == 3,
+		100,
+		"Didn't get all three characters",
+	)
+	for charb in boxl.children:
+		if charb.text == "triangle":
+			touch = UnitTestTouch(*charb.center)
+			touch.pos = charb.center
+			assert charb.dispatch("on_touch_down", touch)
+			advance_frames(5)
+			charb.dispatch("on_touch_up", touch)
+			idle_until(
+				lambda: charb.state == "down",
+				10,
+				"Button press did not work",
+			)
+			break
+	else:
+		assert False, 'No button for "triangle" character'
+	idle_until(
+		lambda: app.chars.ids.charsview.character_name == "triangle",
+		100,
+		"Never propagated character_name",
+	)
+	app.chars.toggle()
+	idle_until(
+		lambda: app.manager.current == "mainscreen",
+		100,
+		"Didn't switch back to mainscreen",
+	)
+	idle_until(
+		lambda: not app.mainscreen.boardview.board.spot,
+		100,
+		"Didn't clear out spots, {} left".format(
+			len(app.mainscreen.boardview.board.spot)
+		),
+	)
+	app.mainscreen.charmenu.charmenu.toggle_chars_screen()
+	idle_until(
+		lambda: app.manager.current == "chars",
+		100,
+		"Never switched to chars",
+	)
+
+	for charb in boxl.children:
+		if charb.text == "physical":
+			touch = UnitTestTouch(*charb.center)
+			touch.pos = charb.center
+			assert charb.dispatch("on_touch_down", touch)
+			advance_frames(5)
+			charb.dispatch("on_touch_up", touch)
+			idle_until(
+				lambda: charb.state == "down",
+				10,
+				"Button press did not work",
+			)
+			break
+	else:
+		assert False, 'No button for "physical" character'
+	idle_until(
+		lambda: app.chars.ids.charsview.character_name == "physical",
+		100,
+		"Never propagated character_name",
+	)
+	app.chars.toggle()
+	idle_until(
+		lambda: len(app.mainscreen.boardview.board.spot) == physspots,
+		100,
+		"Never got physical back",
+	)
